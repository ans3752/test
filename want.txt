code_string="in the beginning the universe was created. this has made a lot of people very angry and been widely regarded as a bad move"

function save_scene()
	local temp_zoom=cam_zoom
	
	flip()
	cls(0)
	print("p𝘪𝘤𝘰v𝘰𝘹 "..build_version,1,120,7)
	right_print("e𝘭𝘦𝘤𝘵𝘳𝘪𝘤 g𝘳𝘺𝘱𝘩𝘰𝘯",127,120,7)
	--print("v𝘦𝘳𝘴𝘪𝘰𝘯",1,80,7)
	--center_print(build_version,15,88,7)
	--
	--
	--vertical_print("e𝘭𝘦𝘤𝘵𝘳𝘪𝘤",106,40,7)
	--vertical_print("g𝘳𝘺𝘱𝘩𝘰𝘯",114,43,7)

	
	--cam_zoom*=.5
	--update_camera()
	--iso_render(31,32,31+64,31+64)
	--rect(31,32,31+64,31+64,7)
	--
	--flip()
--	--freeze()
	--cam_zoom=temp_zoom
	
	
	--freeze()
	local v=0
	local mem_loc=0x6000
	
	poke(mem_loc,k_width)	mem_loc+=1
	poke(mem_loc,k_height)	mem_loc+=1
	poke(mem_loc,k_depth)	mem_loc+=1
	
	
	local count=0
	for k=0,k_depth-1 do
		for j=0,k_height-1 do
			for i=0,k_width-1 do
				v=vox_scene[i][j][k]
				v+=ord(sub(code_string,count%(#code_string)+1,count%(#code_string)+1))
				v=v%128
				--v=v+flr(rnd(128))
				--v=v%256
					--if(rnd(2)>1)v+=127
				poke(mem_loc,v)
				mem_loc+=1
				--if(mem_loc==0x6000+2048) mem_loc+=4096
				count+=1
			end
		end
	end
	extcmd("screen",1) 
	--freeze()
end


k_user_mem_loc = 0x4300
function check_import()
	local c=0
	local count=0
	srand(12)

	if( stat(121) ) then
		local img_width=read_serial_byte(true)
		local img_height=read_serial_byte(true)
		
		--cls()
		--print(img_width )
		--print(img_height)
		
		local x=0
		local y=0
		local z=0
		
		flip()
		for j=0,127 do
			for i=0,127 do			
				local v=read_serial_byte()
				pset(i,j,v)
			end
		end
		mem_loc=0x6000
		
		k_width =peek(mem_loc)	mem_loc+=1
		k_height = peek(mem_loc)	mem_loc+=1
		k_depth = peek(mem_loc)	mem_loc+=1
		
		for k=0,k_depth-1 do
			for j=0,k_height-1 do
				for i=0,k_width-1 do
				
					--if(rnd(2)>1)v+=127
				v=peek(mem_loc)
				v-=ord(sub(code_string,count%(#code_string)+1,count%(#code_string)+1))
				v=v%128
				--v=v-flr(rnd(128))
				--v=v%256
				vox_scene[i][j][k]=v
				mem_loc+=1
				--if(mem_loc==0x6000+2048) mem_loc+=4096
				count+=1
				end
			end
		end
		
		
		
		clear_serial()
		needs_redraw=true
		
		
	end
	
end

--trashes first 1-2 bytes of user memory area
function read_serial_byte(word)
	--if(not stat(121)) return false
	if(word!=nil)then
		serial(0x802, k_user_mem_loc, 2)
		return peek2(k_user_mem_loc)
	else
		serial(0x802, k_user_mem_loc, 1)
		return peek(k_user_mem_loc)		
	end
end

function clear_serial()
	while(stat(121))do
		 read_serial_byte()
	end
end